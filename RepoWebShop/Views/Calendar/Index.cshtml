@model CalendarViewModel

<style>
    .calendar-index {
        /*font-family: Arial;*/
    }

        .calendar-index table {
            margin: auto;
        }

        .calendar-index div.timepicker {
            margin: 5px;
            width: 100px;
        }

        .calendar-index table.timeframestable {
            vertical-align: top;
        }

        .calendar-index .input-group-addon {
            max-width: 38px;
        }

</style>

<div class="container calendar-index">
    @{
        for (int i = 0; i <= 6; i++)
        {
            <div class="col-sm-6 col-lg-4 col-md-6" >
                <table>
                    <tbody>
                        <tr>
                            <td>
                                <h2>@Model.DayToString(i)</h2>
                            </td>
                        </tr>
                        <tr>
                            <td style="text-align: center;">
                                <strong>Atencion al Publico</strong>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <working-hours day-id="@i" working-hours="@Model.OpenHours" hours-type="openhours" delete-class="delete openhours-actionlink"></working-hours>
                                <time-frame day-id=@i class-name="openhours" action-type="addtimeframe openhours-actionlink"></time-frame>
                            </td>
                        </tr>
                        <tr>
                            <td style="text-align: center;">
                                <strong>Produccion</strong>
                            </td>
                        </tr>
                        <tr>
                            <td style="vertical-align:top;">
                                <working-hours day-id="@i" working-hours="@Model.ProcessingHours" hours-type="processinghours" delete-class="delete processinghours-actionlink"></working-hours>
                                <time-frame day-id=@i class-name="processinghours" action-type="addtimeframe processinghours-actionlink"></time-frame>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        }
    }
</div>


<script type="text/javascript">
    $(document).ready(function () {
        $('.timeframestable').DataTable({
            "language": {
                "url": "/Scripts/SpanishDatatables.json"
            },
            "searching": false,
            "sorting": false,
            "paging": false,
            "columnDefs": [
                {
                    "targets": [0],
                    "visible": false,
                    "searchable": false
                }
            ],
            "bInfo": false
        });
    });

    $('.openhours').timepicker({
        showMeridian: false
    });
    $('.processinghours').timepicker({
        showMeridian: false
    });
    $('a.delete.openhours-actionlink').on('click', function (data) {
        data.preventDefault();

        $.ajax({
            type: 'DELETE',
            url: '/api/CalendarData/OpenHoursDeleteTimeFrame/' + data.target.id,
            success: function (data) { location.reload(); },
            error: function () {
                $('#openhours-' + data.target.id).empty().append('No se guardaron los cambios.');
            }
        });
    });
    $('a.delete.processinghours-actionlink').on('click', function (data) {
        data.preventDefault();

        $.ajax({
            type: 'DELETE',
            url: '/api/CalendarData/ProcessingHoursDeleteTimeFrame/' + data.target.id,
            success: function (data) { location.reload(); },
            error: function () {
                $('#processinghours-' + data.target.id).empty().append('No se guardaron los cambios.');
            }
        });
    });

    $('a.addtimeframe.openhours-actionlink').on('click', function (data) {
        data.preventDefault();

        var startingAt = $('input#' + data.target.id + '.form-control.input-small.startingat.openhours')[0].value;
        var finishingAt = $('input#' + data.target.id + '.form-control.input-small.finishingat.openhours')[0].value;

        $.ajax({
            type: 'POST',
            url: '/api/CalendarData/OpenHoursAddTimeFrame/' + data.target.id + '/' + startingAt + '/' + finishingAt,
            success: function (data) { location.reload(); },
            error: function () {
                $('#openhours-' + data.target.id).empty().append('No se guardaron los cambios.');
            }
        });
    });

    $('a.addtimeframe.processinghours-actionlink').on('click', function (data) {
        data.preventDefault();

        var startingAt = $('input#' + data.target.id + '.form-control.input-small.startingat.processinghours')[0].value;
        var finishingAt = $('input#' + data.target.id + '.form-control.input-small.finishingat.processinghours')[0].value;
        $.ajax({
            type: 'POST',
            url: '/api/CalendarData/ProcessingHoursAddTimeFrame/' + data.target.id + '/' + startingAt + '/' + finishingAt,
            success: function (data) { location.reload(); },
            error: function () {
                $('#processinghours-' + data.target.id).empty().append('No se guardaron los cambios.');
            }
        });
    });

</script>