@model OrderDetailsViewModel

<link href="~/Content/Order/Detail.css" rel="stylesheet" />

@{
    var pickUp = Model.Order.PickUpTime?.ToString("dd'/'MM'/'yyyy") ?? string.Empty;
}

<div class="container order-detail">
    <h3>Detalles: @Model.Order.FriendlyBookingId</h3>

    <div class="container">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>Cantidad</th>
                    <th>Producto</th>
                    <th>Precio</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Items)
                {
                    <tr>
                        <td> @item.Amount </td>
                        <td> @item.Pie.PieDetail.Name @item.Pie.Name </td>
                        <td> @item.Pie.Price</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <br />

    <div>
        @{ 
            var paymentState = Model.Order.OrderPaymentStatus.GetType();
            var progress = Model.Order.OrderProgressState.GetType();

            
            if (progress == typeof(OrderInProgress))
            {
                <a class="btn btn-info" onclick="completeOrder()">Orden Lista</a>
                <a class="btn btn-warning" href="/Order/UpdateOrderWithReason/Cancel/@Model.Order.OrderId">Cancelar</a>
            }

            
            if (progress == typeof(OrderComplete))
            {
                <a class="btn btn-success" onclick="pickUpOrder()">Orden Retirada</a>
                <a class="btn btn-warning" href="/Order/UpdateOrderWithReason/Cancel/@Model.Order.OrderId">Cancelar</a>
            }

            if (progress == typeof(OrderPickedUp))
            {
                <a class="btn btn-warning" href="/Order/UpdateOrderWithReason/Return/@Model.Order.OrderId">Pedido retornado</a>
            }

            if (paymentState == typeof(OrderReservationNotPaid))
            {
                <a class="btn btn-success" onclick="payOrder()">Pago recibido</a>
            }

            if(paymentState == typeof(OrderReservationPaid) || paymentState == typeof(OrderMercadoPagoPaid))
            {
                <a class="btn btn-danger" href="/Order/UpdateOrderWithReason/Refund/@Model.Order.OrderId">Devolver dinero</a>
            }
        }
    </div>

    <br />
    <table class="table table-user-information" >
        <tbody>
            <tr>
                <td><strong>Estado</strong></td>
                @{var cancelled = Model.Order.Cancelled ? "<div class='text-muted'>Pedido cancelado</div>" : "";}
                <td colspan="2" id="">@Model.Order.StatusSpanish @Html.Raw(cancelled)</td>
            </tr>
            <tr>
                <td><strong>Total</strong></td>
                <td colspan="2">@Model.Order.OrderTotal</td>
            </tr>
            <tr>
                <td><strong>Cliente</strong></td>
                <td colspan="2" id="">
                    @Html.Raw(Model.Order.ContactDataAsHtml)

                </td>
            </tr>
            <tr>
                <td><strong>Comentarios</strong></td>
                <td colspan="2">@Model.Order.CustomerComments</td>
            </tr>
            <tr>
                <td><strong>Fecha Creacion</strong></td>
                <td colspan="2">@Model.Order.OrderPlaced.ToShortDateString() @Model.Order.OrderPlaced.ToShortTimeString() </td>
            </tr>
            <tr>
                <td><strong>Plazo</strong></td>
                <td colspan="2">@Model.Order.PreparationTime hs.</td>
            </tr>
            <tr>
                <td><strong>Correo enviado</strong></td>
                <td colspan="2">
                    <div>
                        <p><strong>@Model.Order.Email?.To</strong> <a href="/Order/EmailNotification/@Model.Order.OrderId" target="_blank">Ver</a></p>
                    </div>
                </td>
            </tr>
            <tr>
                <td><strong>Orden Cancelada</strong></td>
                <td colspan="2">
                    <div>
                        <p>@Model.Order.Cancelled</p>
                    </div>
                </td>
            </tr>
            <tr>
                <td><strong>Orden Retirada</strong></td>
                <td colspan="2">
                    <div>
                        <p>@Model.Order.PickedUp</p>
                    </div>
                </td>
            </tr>
            <tr>
                <td><strong>Orden Lista</strong></td>
                <td colspan="2">
                    <div>
                        <p>@Model.Order.Finished</p>
                    </div>
                </td>
            </tr>

            <tr>
                <td><strong>Pago Recibido</strong></td>
                <td colspan="2">
                    <div>
                        <p>@Model.Order.PaymentReceived</p>
                    </div>
                </td>
            </tr>

            <tr>
                <td><strong>Orden Retornada</strong></td>
                <td colspan="2">
                    <div>
                        <p>@Model.Order.Returned</p>
                    </div>
                </td>
            </tr>
            <tr>
                <td><strong>Orden reembolsada</strong></td>
                <td colspan="2">
                    <div>
                        <p>@Model.Order.Refunded</p>
                    </div>
                </td>
            </tr>
            <tr>
                <td><strong>Registro</strong></td>
                <td colspan="2">
                    <div>
                        @{ 
                            var history = Model.Order.OrderHistory?.Replace("\r\n", "<br/>").Replace("\n", "<br/>") ?? string.Empty;
                            if (history.StartsWith("<br/>"))
                            {
                                history = history.Substring(5);
                            }
                        }
                        @Html.Raw(history)
                    </div>
                </td>
            </tr>
        </tbody>
    </table>

    <div class="alert alert-success" id="successMessage" style="">
        Cambio guardado satisfactoriamente!
    </div>
    <div class="alert alert-danger" id="errorMessage" style="">
        Ocurrio un error al guardar. Intente mas tarde.
    </div>
</div>
<script type="text/javascript">
    function payOrder() {
        $.ajax({
            type: 'POST',
            data: {},
            url: '/api/OrderData/PayOrder/@Model.Order.OrderId',
            success: function () {
                window.location.reload();
            },
            error: function () {
                handleError();
            }
        });
    }

    function pickUpOrder() {
        $.ajax({
            type: 'POST',
            data: {},
            url: '/api/OrderData/PickUpOrder/' + '@Model.Order.OrderId',
            success: function () {
                window.location = "/Order/InProgress";
            },
            error: function () {
                handleError();
            }
        });
    }

    function completeOrder() {
        $.ajax({
            type: 'POST',
            data: {},
            url: '/api/OrderData/CompleteOrder/' + '@Model.Order.OrderId',
            success: function () {
                window.location.reload();
            },
            error: function () {
                handleError();
            }
        });
    }


    $("#pickUpSubmit").on('click', function () {
        var parts = $("#pickUpDateSubmit").val().split("/");
        var date = new Date(parts[2], parts[1] - 1, parts[0]);

        $.ajax({
            type: 'POST',
            data: {},
            url: '/api/OrderData/UpdatePickUpDate/@Model.Order.OrderId/' + date,
            success: function () {
                handleSuccess();
            },
            error: function () {
                handleError();
            }
        });
    });

    $.fn.datepicker.defaults.format = "dd/mm/yyyy";
$('.datepicker').datepicker();

function addComments(comments) {
    $.ajax({
        type: 'POST',
        data: {},
        url: '/api/OrderData/AddComments/' + '@Model.Order.OrderId' + '/' + comments,
        success: function () {
            handleSuccess();
        },
        error: function () {
            handleError();
        }
    });
}

function handleSuccess() {
    $('#successMessage').fadeIn(1000).fadeOut(2000);
}
function handleError() {
    $('#errorMessage').css("display", "flex");
}
</script>

