@model DeliveryAddress

<section class="container" style="max-width:600px;">
    <form asp-controller="Delivery" asp-action="Index" method="post" role="form">
        <div class="form-group" id="locationField">
            <h3 class="text-center">Escribe la dirección de envío</h3>
            <label asp-for="AddressLine1" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="AddressLine1" id="autocomplete" class="form-control"
                       placeholder="Ingresa tu dirección"
                       onFocus="geolocate()" autocomplete="off" />
            <div asp-validation-summary="All" class="text-danger"></div>
                
            </div>
        </div>
        <div class="form-group ">
            <div class="col-md-2 control-label"></div>
            <div class="col-md-10">
                <table id="address">
                    <tr>
                        <td>
                            <input id="street_number" asp-for="StreetNumber" readonly="readonly" />
                        </td>
                        <td>
                            <input id="route" asp-for="StreetName" readonly="readonly" />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <input id="locality" asp-for="State" readonly="readonly" />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <input id="administrative_area_level_1" readonly="readonly" />
                        </td>
                        <td>
                            <input id="postal_code" asp-for="ZipCode" readonly="readonly" />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <input id="country" asp-for="Country" disabled="disabled" />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <input id="locality" asp-for="State" disabled="disabled" />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <input id="distance" asp-for="Distance" type="number" disabled="disabled" />
                        </td>
                    </tr>
                </table>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-primary"  value="Guardar" />
            </div>
        </div>
    </form>
</section>
<script>
    function getDistance() {
        var location = $('#autocomplete').val();
        $.get("api/DeliveryData/GetDistance/" + location, function (data) {
            document.getElementById('distance').value = data.distance;
        });
    }
</script>
<script>
    var placeSearch, autocomplete;
    var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
    };

    function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.

        autocomplete = new google.maps.places.Autocomplete(
            (document.getElementById('autocomplete')),
            {
                types: ['address'],
                componentRestrictions: { country: 'ar' }
            });


        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
    }

    function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        for (var component in componentForm) {
            document.getElementById(component).value = '';
            //document.getElementById(component).disabled = false;
        }

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
            var addressType = place.address_components[i].types[0];
            if (componentForm[addressType]) {
                var val = place.address_components[i][componentForm[addressType]];
                document.getElementById(addressType).value = val;
            }
        }
        getDistance();
    }

    // Bias the autocomplete object to the user's geographical location,
    // as supplied by the browser's 'navigator.geolocation' object.
    function geolocate() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                var geolocation = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                var circle = new google.maps.Circle({
                    center: geolocation,
                    radius: position.coords.accuracy
                });
                autocomplete.setBounds(circle.getBounds());
            });
        }
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAR5nmTSuiZsjA5Yhgx3w9EDEyF-C8zIwU&libraries=places&callback=initAutocomplete"
        async defer></script>